[
    {
        "level_number": 0,
        "title": "配列の紹介",
        "pattern": "^let\\s+stack\\s*=\\s*\\[\\];$",
        "hints": [
            "変数を宣言するには 'let' を使用してください。",
            "空の配列は <code>[]</code> で表します。"
        ],
        "steps": [
            {
                "step_number": 0,
                "title": "ようこそ、Array Catへ！",
                "content": "ここでは、<br>配列の基本的な概念を楽しく実践的に学べます。<br>要素を整理する達人になれるよう、準備を整えましょう。<p>始めましょう！</p>"
            },
            {
                "step_number": 1,
                "title": "マニュアルの使い方",
                "content": "このマニュアルはゲーム中のベストパートナーです。ここでヒントや説明を見つけて、チャレンジをクリアしてください。<br><br> -> 困ったり迷ったりしたら、いつでも参照できます。ぜひ活用してください！"
            },
            {
                "step_number": 2,
                "title": "入力エリア",
                "content": "システムに命令を与えるには、<strong><span style='color: blue;'>入力エリア</span></strong> を使用します。ここにコマンドを入力してゲームと対話します。"
            },
            {
                "step_number": 3,
                "title": "スタックの作成",
                "content": "フルーツを積み上げる場所が必要です。そのため、以下のコマンドを使用してスタックを作成します：<p><strong><code>let stack = [];</code></strong></p><p>スタックとは、要素を格納する空の配列のことです。</p>"
            }
        ]
    },
    {
        "level_number": 1,
        "title": "配列の基本操作",
        "pattern": "stack.push(cherry);",
        "hints": [
            "スタックは物を保管するコンテナのようなものです。",
            "JavaScriptの配列は <code>[]</code> で表します。"
        ],
        "steps": [
            {
                "step_number": 0,
                "title": "素晴らしい！",
                "content": "<strong>最初の配列を作成しました</strong><p>次に何が起こったのか簡単に説明します....</p>"
            },
            {
                "step_number": 1,
                "title": "スタックとは何ですか？（パート1）",
                "content": "テニスボールがたくさんあり、それをなくさないように収納する必要があると想像してください。それらを容器に入れれば問題解決です。その容器が<b>配列</b>で、<code>[]</code> で表します。工場ではこれを<i>スタック</i>と呼んでいます。"
            },
            {
                "step_number": 2,
                "title": "スタックとは何ですか？（パート2）",
                "content": "容器を手に入れたら、その中に要素を追加したり、削除したり、整理したりする必要があります。JavaScriptでは、配列で同じことを行います。<br><br> コマンド <code>stack.push('cherry');</code> を使用して、スタックにチェリーを追加してください。"
            },
            {
                "step_number": 3,
                "title": "要素の削除",
                "content": "popを使って配列の最後の要素を削除します。"
            },
            {
                "step_number": 4,
                "title": "要素へのアクセス",
                "content": "インデックスを使用して配列の2番目の要素にアクセスします。"
            }
        ]
    }
]
